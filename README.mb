python 3.8.19, tensorflow 2.10.1, python-chess,  PyQt
Проект гри (Шахи), ідея полягає в стовренні застосунку де можна грати в 2 режимах, PvP та PvAI.
AI має 3 режима (Легкий, середній, важкий), найлегший режим використовує MinimaxAI а складніші 
натренеровану заздалегідь модель, а саме Нейронна мережа для оцінки позиції + Пошук Мінімакс. 

ChessApp/
│
├── chess_app/                  # Головний пакет додатку
│   ├── __init__.py
│   ├── main.py         9      # Точка входу в додаток
│   ├── constants.py    1        # Константи (кольори, розміри, шляхи)
│   │
│   ├── game/                   # Логіка гри
│   │   ├── __init__.py
│   │   ├── controller.py  8    # GameController - центральний контролер гри
│   │   ├── state.py      2      # ChessState - стан дошки (обгортка python-chess)
│   │   └── mode.py       3      # Режими гри (PvP, PvAI)
│   │
│   ├── ai/                     # Логіка штучного інтелекту
│   │   ├── __init__.py
│   │   ├── interface.py         # AIInterface - абстрактний клас для AI
│   │   ├── minimax_ai.py      # MinimaxAI - реалізація звичайного алгоритму
│   │   ├── tf_evaluator.py     # TFEvaluator - оцінювач позицій через нейромережу
│   │   └── model_loader.py    # Завантаження тренованих моделей
│   │
│   ├── ui/                     # Графічний інтерфейс
│   │   ├── __init__.py
│   │   ├── main_window.py      # Головне вікно додатку
│   │   ├── board_widget.py    # Віджет шахової дошки
│   │   ├── game_info.py       # Відображення інформації про гру
│   │   ├── menu.py             # Меню вибору режимів гри
│   │   └── pieces.py           # Відображення шахових фігур
│   │
│   └── utils/                  # Допоміжні утиліти
│       ├── __init__.py
│       ├── position.py         # Перетворення координат
│       └── fen_converter.py    # Конвертація FEN у тензор
│
├── models/                     # Треновані моделі TensorFlow
│   └── chess_evaluator.h5      # (додати пізніше)
│
├── resources/                  # Ресурси додатку
│   ├── pieces/                 # Зображення фігур
│   │   ├── wp.png              # Білий пішак
│   │   ├── wn.png              # Білий кінь
│   │   └── ...                 # (інші фігури)
│   └── styles/                 # Стилі інтерфейсу
│       └── main_style.css      
│
├── training/                   # Скрипти для тренування моделі
│   ├── data_preparation.py     # Підготовка даних з PGN
│   ├── model_training.py       # Тренування моделі
│   └── dataset/                # Датасети для тренування
│       └── games.pgn           # Приклад файлу з партіями
│
├── requirements.txt            # Залежності
└── README.md                   # Інструкції



Нова гра (Ctrl+N)

Перезапуск гри (Ctrl+R)

Збереження гри (Ctrl+S)

Завантаження гри (Ctrl+O)

Вихід (Ctrl+Q)
